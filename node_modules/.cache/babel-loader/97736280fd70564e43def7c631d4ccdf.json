{"ast":null,"code":"var _jsxFileName = \"/Users/luka/Desktop/desk-lab/friday-code-challenge/src/components/ModelsList.js\";\nimport React, { Component } from 'react';\nimport Model from './Model';\nimport NotAvailable from '../utils/NotAvailable';\nimport Spinner from '../utils/Spinner';\n\nclass ModelsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      models: [],\n      isLoading: true\n    };\n\n    this.getModels = () => {\n      fetch(`http://localhost:8080/api/models?make=${this.props.make}`).then(res => res.json()).then(data => this.setState({\n        models: data,\n        isLoading: false\n      }), error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.filteredModels = () => this.state.models.filter(model => {\n      return model.toLowerCase().includes(this.props.inputText.toLowerCase());\n    });\n  }\n\n  componentDidMount() {\n    this.getModels();\n  }\n\n  render() {\n    const {\n      make\n    } = this.props;\n    const {\n      error,\n      isLoading\n    } = this.state;\n    const models = this.filteredModels();\n\n    if (error) {\n      throw error;\n    } else if (isLoading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    } else if (models.length === 0) {\n      return /*#__PURE__*/React.createElement(NotAvailable, {\n        text: `Not Available for ${make}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, \"List of Models\", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, models.map((model, id) => {\n        return /*#__PURE__*/React.createElement(Model, {\n          key: id,\n          model: model,\n          make: make,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }\n        });\n      })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"back-btn\",\n        href: \"/selectVehicle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, \"Back\"));\n    }\n  }\n\n}\n\nexport default ModelsList;","map":{"version":3,"sources":["/Users/luka/Desktop/desk-lab/friday-code-challenge/src/components/ModelsList.js"],"names":["React","Component","Model","NotAvailable","Spinner","ModelsList","state","error","models","isLoading","getModels","fetch","props","make","then","res","json","data","setState","filteredModels","filter","model","toLowerCase","includes","inputText","componentDidMount","render","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCK,KAFiC,GAEzB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFyB;;AAAA,SAYjCC,SAZiC,GAYrB,MAAM;AAChBC,MAAAA,KAAK,CAAE,yCAAwC,KAAKC,KAAL,CAAWC,IAAK,EAA1D,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BV,QAAAA,MAAM,EAAES,IADkB;AAE1BR,QAAAA,SAAS,EAAE;AAFe,OAAd,CAFd,EAMCF,KAAD,IAAW;AACT,aAAKW,QAAL,CAAc;AACZX,UAAAA;AADY,SAAd;AAGD,OAVD;AAYD,KAzBgC;;AAAA,SA2BjCY,cA3BiC,GA2BhB,MAAM,KAAKb,KAAL,CAAWE,MAAX,CAAkBY,MAAlB,CAAyBC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,WAAN,GAAoBC,QAApB,CAA6B,KAAKX,KAAL,CAAWY,SAAX,CAAqBF,WAArB,EAA7B,CAAP;AACD,KAFoB,CA3BU;AAAA;;AAQjCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,SAAL;AACD;;AAqBDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEL,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAuB,KAAKH,KAAlC;AACA,UAAME,MAAM,GAAG,KAAKW,cAAL,EAAf;;AACA,QAAIZ,KAAJ,EAAW;AACT,YAAMA,KAAN;AACD,KAFD,MAEO,IAAIE,SAAJ,EAAc;AACnB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAED,IAAID,MAAM,CAACmB,MAAP,KAAkB,CAAtB,EAAyB;AAC7B,0BAAO,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAG,qBAAoBd,IAAK,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFK,MAEC;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEL,MAAM,CAACoB,GAAP,CAAW,CAACP,KAAD,EAAQQ,EAAR,KAAe;AACxB,4BAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,EAAZ;AAAgB,UAAA,KAAK,EAAER,KAAvB;AAA8B,UAAA,IAAI,EAAER,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,CAFF,CAFF,oBAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARN,eASA;AAAG,QAAA,SAAS,EAAC,UAAb;AAAwB,QAAA,IAAI,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,CADF;AAaA;AACF;;AAxDiC;;AA2DnC,eAAeR,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Model from './Model';\nimport NotAvailable from '../utils/NotAvailable';\nimport Spinner from '../utils/Spinner';\n\nclass ModelsList extends Component {\n\n  state = {\n    error: null,\n    models: [],\n    isLoading: true\n  }\n\n  componentDidMount() {\n    this.getModels()\n  }\n\n  getModels = () => {\n    fetch(`http://localhost:8080/api/models?make=${this.props.make}`)\n    .then(res => res.json())\n    .then(data => this.setState({\n      models: data,\n      isLoading: false\n    }),\n    (error) => {\n      this.setState({\n        error,\n      });\n    }\n   )\n  }\n\n  filteredModels = () => this.state.models.filter(model => {\n      return model.toLowerCase().includes(this.props.inputText.toLowerCase())\n    })\n\n  render() {\n    const { make } = this.props\n    const { error, isLoading } = this.state\n    const models = this.filteredModels()\n    if (error) {\n      throw error\n    } else if (isLoading){\n      return <Spinner />\n    }else if (models.length === 0) {\n      return <NotAvailable text={`Not Available for ${make}`}/>\n    } else {\n    return (\n      <div>\n      List of Models\n        <ul>\n        {\n          models.map((model, id) => {\n            return <Model key={id} model={model} make={make}/>\n          })\n        }\n      </ul> <br />\n      <a className=\"back-btn\" href='/selectVehicle'>Back</a>\n      </div>\n    );\n   }\n }\n}\n\nexport default ModelsList;\n"]},"metadata":{},"sourceType":"module"}