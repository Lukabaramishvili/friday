{"ast":null,"code":"var _jsxFileName = \"/Users/luka/Desktop/desk-lab/friday-code-challenge/friday-frontend/src/components/ModelsList.js\";\nimport React, { Component } from 'react';\nimport Model from './Model';\n\nclass ModelsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoading: true,\n      models: []\n    };\n\n    this.getModels = () => {\n      fetch(`http://localhost:8080/api/models?make=${this.props.make}`).then(res => res.json()).then(data => this.setState({\n        models: data\n      }), error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.filteredModels = () => this.state.models.filter(model => {\n      return model.toLowerCase().includes(this.props.inputText.toLowerCase());\n    });\n  }\n\n  componentDidMount() {\n    this.getModels();\n  }\n\n  render() {\n    const {\n      error,\n      isLoading\n    } = this.state;\n    const models = this.filteredModels();\n\n    if (error) {\n      throw error;\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"List of Models\", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, models.map((model, id) => {\n        return /*#__PURE__*/React.createElement(Model, {\n          key: id,\n          model: model,\n          make: this.props.make,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }\n        });\n      })));\n    }\n  }\n\n}\n\nexport default ModelsList;","map":{"version":3,"sources":["/Users/luka/Desktop/desk-lab/friday-code-challenge/friday-frontend/src/components/ModelsList.js"],"names":["React","Component","Model","ModelsList","state","error","isLoading","models","getModels","fetch","props","make","then","res","json","data","setState","filteredModels","filter","model","toLowerCase","includes","inputText","componentDidMount","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCG,KAFiC,GAEzB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAFyB;;AAAA,SAYjCC,SAZiC,GAYrB,MAAM;AAChBC,MAAAA,KAAK,CAAE,yCAAwC,KAAKC,KAAL,CAAWC,IAAK,EAA1D,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BT,QAAAA,MAAM,EAAEQ;AADkB,OAAd,CAFd,EAKCV,KAAD,IAAW;AACT,aAAKW,QAAL,CAAc;AACZX,UAAAA;AADY,SAAd;AAGD,OATD;AAWD,KAxBgC;;AAAA,SA0BjCY,cA1BiC,GA0BhB,MAAM,KAAKb,KAAL,CAAWG,MAAX,CAAkBW,MAAlB,CAAyBC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,WAAN,GAAoBC,QAApB,CAA6B,KAAKX,KAAL,CAAWY,SAAX,CAAqBF,WAArB,EAA7B,CAAP;AACD,KAFoB,CA1BU;AAAA;;AAQjCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,SAAL;AACD;;AAoBDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAuB,KAAKF,KAAlC;AACA,UAAMG,MAAM,GAAG,KAAKU,cAAL,EAAf;;AACA,QAAIZ,KAAJ,EAAW;AACT,YAAMA,KAAN;AACD,KAFD,MAEO;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEE,MAAM,CAACkB,GAAP,CAAW,CAACN,KAAD,EAAQO,EAAR,KAAe;AACxB,4BAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,EAAZ;AAAgB,UAAA,KAAK,EAAEP,KAAvB;AAA8B,UAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,CAFF,CAFF,CADF;AAYA;AACF;;AAjDiC;;AAoDnC,eAAeR,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Model from './Model';\n\n\nclass ModelsList extends Component {\n\n  state = {\n    error: null,\n    isLoading: true,\n    models: []\n  }\n\n  componentDidMount() {\n    this.getModels()\n  }\n\n  getModels = () => {\n    fetch(`http://localhost:8080/api/models?make=${this.props.make}`)\n    .then(res => res.json())\n    .then(data => this.setState({\n      models: data\n    }),\n    (error) => {\n      this.setState({\n        error\n      });\n    }\n   )\n  }\n\n  filteredModels = () => this.state.models.filter(model => {\n      return model.toLowerCase().includes(this.props.inputText.toLowerCase())\n    })\n\n  render() {\n    const { error, isLoading } = this.state\n    const models = this.filteredModels()\n    if (error) {\n      throw error\n    } else {\n    return (\n      <div>\n      List of Models\n        <ul>\n        {\n          models.map((model, id) => {\n            return <Model key={id} model={model} make={this.props.make}/>\n          })\n        }\n        </ul>\n      </div>\n    );\n   }\n }\n}\n\nexport default ModelsList;\n"]},"metadata":{},"sourceType":"module"}